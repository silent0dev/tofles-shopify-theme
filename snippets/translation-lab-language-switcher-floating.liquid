{%- if settings.language_switcher_enabled %}

{%- liquid

assign current_language = localization.language

assign localization_available_languages = localization.available_languages
assign use_international_domains = false

if shop.metafields.translation_lab.published_locales
    assign localization_available_languages = shop.metafields.translation_lab.published_locales
    assign use_international_domains = true
endif

-%}

{{ 'translation-lab-language-switcher-floating.css' | asset_url | stylesheet_tag }}

<div class="translation-lab-language-switcher {{ settings.language_switcher_position }}">
    {%- form 'localization', class: 'tlab-localization' -%}
    <div class="translation-lab-dropdown">
        {%- if settings.language_switcher_flags %}
        <img class="language-flag" src="{{ 'tlab-flags-' | append: current_language.iso_code | append: '.png' | asset_url }}">
        {%- endif -%}
        {%- case settings.language_switcher_label -%}
        {%- when 'language-name' %}
        <span class="language-label language-name">{{ current_language.endonym_name | split: '(' | first | strip }}</span>
        {%- when 'language-code' %}
        <span class="language-label language-code">{{ current_language.iso_code | split: '-' | first | strip }}</span>
        {%- endcase %}
    </div>
    <ul class="translation-lab-language-options {{ settings.language_switcher_position }}">
        {%- for language in localization_available_languages -%}
        <li class="language-option {% if language.iso_code == current_language.iso_code %}active{% endif %}" data-language-code="{{ language.iso_code }}">
            {%- if settings.language_switcher_flags %}
            <img class="language-flag" src="{{ 'tlab-flags-' | append: language.iso_code | append: '.png' | asset_url }}">
            {%- endif -%}
            {%- case settings.language_switcher_label -%}
            {%- when 'language-name' %}
            <span class="language-label language-name">{{ language.endonym_name | split: '(' | first | strip }}</span>
            {%- when 'language-code' %}
            <span class="language-label language-code">{{ language.iso_code | split: '-' | first | strip }}</span>
            {%- endcase %}
        </li>
        {%- endfor %}
    </ul>
    <input type="hidden" name="language_code" value="{{ current_language.iso_code }}">
    {%- endform -%}
</div>

{%- if request.design_mode -%}

{%- endif %}

<style>

  .translation-lab-language-switcher {
    background-color: {{ settings.language_switcher_background_color }} !important;
    border-color: {{ settings.language_switcher_border_color }} !important;
    border-width: {{ settings.language_switcher_border_width }}px !important;
    font-size: {{ settings.language_switcher_font_size }} !important;
    font-weight: {{ settings.language_switcher_font_weight }} !important;
  }

  .translation-lab-dropdown {
    color: {{ settings.language_switcher_text_color }} !important;
  }

  .translation-lab-dropdown:after {
    border-color: {{ settings.language_switcher_text_color }} !important;
  }

  .translation-lab-language-switcher.top-right {
    position: absolute;
    top: {{ settings.language_switcher_spacing_top }}px;
    bottom: auto;
    left: auto;
    right: {{ settings.language_switcher_spacing_right }}px;
  }

  .translation-lab-language-switcher.top-left {
    position: absolute;
    top: {{ settings.language_switcher_spacing_top }}px;
    bottom: auto;
    left: {{ settings.language_switcher_spacing_left }}px;
    right: auto;
  }

  .translation-lab-language-switcher.bottom-left {
    position: fixed !important;
    top: auto !important;
    bottom: {{ settings.language_switcher_spacing_bottom }}px !important;
    left: {{ settings.language_switcher_spacing_left }}px !important;
    right: auto !important;
  }

  .translation-lab-language-switcher.bottom-right {
    position: fixed !important;
    top: auto !important;
    bottom: {{ settings.language_switcher_spacing_bottom }}px !important;
    left: auto !important;
    right: {{ settings.language_switcher_spacing_right }}px !important;
  }

  {%- if settings.language_switcher_custom_css != blank -%}
  {{- settings.language_switcher_custom_css -}}
  {%- endif %}

</style>

<script>
    if (!Array.prototype.find) {
        Object.defineProperty(Array.prototype, 'find', {
            value: function (predicate) {
                if (this == null) {
                    throw TypeError('"this" is null or not defined');
                }

                var o = Object(this);

                var len = o.length >>> 0;

                if (typeof predicate !== 'function') {
                    throw TypeError('predicate must be a function');
                }

                var thisArg = arguments[1];

                var k = 0;

                while (k < len) {
                    var kValue = o[k];
                    if (predicate.call(thisArg, kValue, k, o)) {
                        return kValue;
                    }
                    k++;
                }

                return undefined;
            },
            configurable: true,
            writable: true
        });
    }

    if (typeof window.TranslationLab === 'undefined') {
        window.TranslationLab = {};
    }

    if (typeof TranslationLab.Helpers === 'undefined') {
        TranslationLab.Helpers = {};
    }

    TranslationLab.Helpers.buildRedirectUrl = function (redirectLanguage, currentLocale, shopDomain, useInternationalDomains) {

        if (!redirectLanguage)
            return null;

        if (!currentLocale)
            return null;

        var redirectLocaleLower = redirectLanguage.iso_code.toLowerCase();
        var currentLocaleLower = currentLocale.toLowerCase();

        if (currentLocaleLower === redirectLocaleLower)
            return null;

        var pathnameWithLocale = window.location.pathname;
        var queryString = window.location.search || '';

        var currentLocaleRegEx = new RegExp('^\/' + currentLocaleLower, "ig");
        var pathname = pathnameWithLocale.replace(currentLocaleRegEx, '');

        if (useInternationalDomains)
            return 'https://' + redirectLanguage.domain + pathname + queryString;

        if (redirectLanguage.root_url === '/')
            return 'https://' + shopDomain + pathname + queryString;

        return 'https://' + shopDomain + redirectLanguage.root_url + pathname + queryString;
    }

    if (typeof TranslationLab.Switcher === 'undefined') {
        TranslationLab.Switcher = {};
    }

    TranslationLab.Switcher.configure = function (currentLocale, shopDomain, useInternationalDomains, languageList) {

        function configureDropdown(container) {

            var localStorageKey = 'translation-lab-lang';

            var formSelector = 'form.tlab-localization';
            var dropdownSelector = '.translation-lab-dropdown';
            var languageLabelSelector = 'span.language-label';
            var languageFlagSelector = 'img.language-flag';
            var languageListSelector = 'ul.translation-lab-language-options';
            var inputSelector = 'input[name="language_code"], input[name="country_code"]';

            var dropdownElement = container.querySelector(dropdownSelector);
            var languageLabelElement = dropdownElement.querySelector(languageLabelSelector);
            var languageFlagElement = dropdownElement.querySelector(languageFlagSelector);
            var languageListElement = container.querySelector(languageListSelector);
            var formInputElement = container.querySelector(inputSelector);

            var isOpen = false;

            if (languageListElement && languageListElement.children) {
                Array.prototype.forEach.call(languageListElement.children, function (li) {
                    li.addEventListener('click', languageChangeHandler(li));
                });
            }

            dropdownElement.addEventListener('click', function (event) {
                event.preventDefault();
                isOpen = !isOpen;
                if (isOpen) {
                    openDropdown();
                } else {
                    closeDropdown();
                }
            });

            container.addEventListener('mouseleave', closeDropdown);

            function languageChangeHandler(element) {
                var languageCode = element.dataset.languageCode;
                var elementText = element.querySelector(languageLabelSelector).innerText;
                var selectedLanguage = languageList.find(function (language) { return language.iso_code.toLowerCase() === languageCode.toLowerCase() });
                return function () {
                    event.preventDefault();
                    closeDropdown();
                    languageLabelElement.textContent = elementText;
                    if (languageFlagElement) {
                        languageFlagElement.src = selectedLanguage.flag;
                    }

                    localStorage.setItem(localStorageKey, selectedLanguage.iso_code);

                    if (useInternationalDomains) {

                        var redirectUrl = TranslationLab.Helpers.buildRedirectUrl(selectedLanguage, currentLocale, shopDomain, useInternationalDomains);
                        redirectUrl && window.location.assign(redirectUrl);

                    } else {

                        var form = container.querySelector(formSelector);
                        formInputElement.value = languageCode;
                        if (form) {
                            form.submit();
                        }
                    }
                }
            }

            function openDropdown() {
                isOpen = true;
                dropdownElement.classList.add('open');
                languageListElement.classList.add('open');
            }

            function closeDropdown() {
                isOpen = false;
                dropdownElement.classList.remove('open');
                languageListElement.classList.remove('open');
            }
        }

        var containers = document.querySelectorAll('.translation-lab-language-switcher');
        if (containers && containers.length) {
            for (var i = 0; i < containers.length; i++) {
                configureDropdown(containers[i]);
            }
        }
    }
</script>

<script>

    (function () {

        var useInternationalDomains = {{ use_international_domains | json }};

        var shopDomain = window.Shopify && window.Shopify.designMode
            ? '{{shop.permanent_domain}}'
            : '{{shop.domain}}';

        var currentLocale = '{{current_language.iso_code}}';

        var languageListJson = '[{%- for locale in localization_available_languages %}{\
"name": "{{locale.name | split: "(" | first | strip}}",\
"endonym_name": "{{ locale.endonym_name | split: "(" | first | strip}}",\
"iso_code": "{{ locale.iso_code }}",\
"primary": {{ locale.primary }},\
"flag": "{{ "tlab-flags-" | append: locale.iso_code | append: ".png" | asset_url }}",\
"domain": {{ locale.domain | json }},\
"root_url": {{ locale.root_url | json }}\
}{% unless forloop.last %},{% endunless -%}{%- endfor %}]';

        var languageList = JSON.parse(languageListJson);

        TranslationLab.Switcher.configure(currentLocale, shopDomain, useInternationalDomains, languageList);

    })();

</script>

{%- endif %}